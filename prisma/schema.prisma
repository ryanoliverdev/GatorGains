generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  password      String?
  emailVerified DateTime?
  image         String?
  bio           String?
  streak        Int       @default(0)
  workouts      Workout[]
  accounts      Account[]
  sessions      Session[]
}

model Workout {
  id            String    @id @default(cuid())
  userId        String
  workoutDate   DateTime
  workoutType   String?
  duration      Int?
  user          User      @relation(fields: [userId], references: [id])
  stats         Stat[]
  caloriesBurned Int?
  @@index([userId])
}

model Stat {
  id            String    @id @default(cuid())
  workoutId     String
  exerciseName  String?
  reps          Int?
  sets          Int?
  weightLifted  Int?
  workout       Workout   @relation(fields: [workoutId], references: [id])

  @@index([workoutId])
}